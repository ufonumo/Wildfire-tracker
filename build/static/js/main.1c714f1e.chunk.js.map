{"version":3,"sources":["components/LocationMarker.js","components/LocationInfoBox.js","components/Map.js","assets/Double Ring-1s-200px.gif","App.js","reportWebVitals.js","index.js"],"names":["LocationMarker","lat","lng","onClick","className","icon","LocationIcon","LocationInfoBox","info","id","title","Map","eventData","center","zoom","useState","locationInfo","setLocationInfo","markers","map","ev","categories","geometries","coordinates","bootstrapURLKeys","key","defaultCenter","defaultZoom","defaultProps","App","setEventData","loading","setloading","useEffect","a","fetch","resp","json","events","fetchEvents","alt","src","Spinner","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAIaA,EAAiB,SAAC,GAAyB,EAAxBC,IAAwB,EAAnBC,IAAoB,IAAdC,EAAa,EAAbA,QACvC,OACI,qBAAKC,UAAU,kBAAkBD,QAASA,EAA1C,SACI,cAAC,OAAD,CAAME,KAAMC,IAAcF,UAAU,qBCLnCG,EAAkB,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAC7B,OACI,sBAAKJ,UAAU,gBAAf,UACI,wDACA,+BACI,sCAAQ,4BAAII,EAAKC,QACjB,yCAAW,4BAAID,EAAKE,kBCF9BC,EAAM,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,KAAU,EAGAC,mBAAS,MAHT,mBAGjCC,EAHiC,KAGnBC,EAHmB,KAKlCC,EAAUN,EAAUO,KAAI,SAAAC,GAC1B,OAA2B,IAAxBA,EAAGC,WAAW,GAAGZ,GACR,cAAC,EAAD,CAAgBR,IAAKmB,EAAGE,WAAW,GAAGC,YAAY,GAC1DrB,IAAKkB,EAAGE,WAAW,GAAGC,YAAY,GAClCpB,QAAS,kBAAMc,EAAgB,CAACR,GAAIW,EAAGX,GAAIC,MAAOU,EAAGV,WAGlD,QAEX,OACI,qBAAKN,UAAU,MAAf,SACI,eAAC,IAAD,CACIoB,iBAAkB,CAAEC,IAhBhB,2CAiBJC,cAAeb,EACfc,YAAab,EAHjB,UAKKI,EAEAF,GAAgB,cAAC,EAAD,CAAiBR,KAAMQ,UAOxDL,EAAIiB,aAAe,CACff,OAAO,CACHZ,IAAM,SACNC,IAAK,WAETY,KAAM,GAGKH,QC5CA,MAA0B,iDC+B1BkB,MA3Bf,WAAgB,IAAD,EAEqBd,mBAAS,IAF9B,mBAENH,EAFM,KAEKkB,EAFL,OAGiBf,oBAAS,GAH1B,mBAGNgB,EAHM,KAGGC,EAHH,KAoBb,OAfAC,qBAAU,YACS,uCAAG,gCAAAC,EAAA,6DAClBF,GAAW,GADO,SAECG,MAAM,mDAFP,cAEZC,EAFY,gBAGMA,EAAKC,OAHX,gBAGVC,EAHU,EAGVA,OAERR,EAAaQ,GACbN,GAAW,GANO,4CAAH,qDASjBO,KAEC,IAID,qBAAKnC,UAAU,MAAf,SACK2B,EAA0C,qBAAK3B,UAAU,UAAUoC,IAAI,UAAUC,IAAKC,IAA5E,cAAC,EAAD,CAAK9B,UAAWA,OCdpB+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1c714f1e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Icon} from '@iconify/react'\r\nimport LocationIcon from '@iconify/icons-mdi/fire-alert'\r\n\r\nexport const LocationMarker = ({lat, lng,  onClick}) => {\r\n    return (\r\n        <div className='location_marker' onClick={onClick}>\r\n            <Icon icon={LocationIcon} className='location_icon' />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const LocationInfoBox = ({info}) => {\r\n    return (\r\n        <div className=\"location_info\">\r\n            <h3>Wildfire Location Info</h3>\r\n            <ul>\r\n                <li>ID: <b>{info.id}</b></li> \r\n                <li>TITLE: <b>{info.title}</b></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport GoogleMapReact from 'google-map-react'\r\nimport { LocationMarker } from './LocationMarker';\r\nimport { LocationInfoBox } from './LocationInfoBox';\r\n\r\n\r\nconst Map = ({ eventData, center, zoom}) => {\r\n    const api_key = 'AIzaSyACrSn2JIhIBUixMpIM2Sj4Q9yWDn8QHOg';\r\n\r\n    const [locationInfo, setLocationInfo] = useState(null)\r\n\r\n    const markers = eventData.map(ev => {\r\n        if(ev.categories[0].id === 8){\r\n            return  <LocationMarker lat={ev.geometries[0].coordinates[1]} \r\n            lng={ev.geometries[0].coordinates[0]}\r\n            onClick={() => setLocationInfo({id: ev.id, title: ev.title})}/>\r\n\r\n        }\r\n        return null\r\n    })\r\n    return (\r\n        <div className='map'>\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{ key: api_key }}\r\n                defaultCenter={center}\r\n                defaultZoom={zoom}\r\n                >                \r\n                {markers}\r\n\r\n                {locationInfo && <LocationInfoBox info={locationInfo}/> }\r\n\r\n            </GoogleMapReact>\r\n        </div>\r\n    )\r\n}\r\n\r\nMap.defaultProps = {\r\n    center:{\r\n        lat:  36.36024,\r\n        lng: 139.44326\r\n    },\r\n    zoom: 6\r\n}\r\n\r\nexport default Map;\r\n\r\n","export default __webpack_public_path__ + \"static/media/Double Ring-1s-200px.c361eab7.gif\";","import Map from './components/Map';\nimport {useState, useEffect} from 'react'\nimport Spinner from './assets/Double Ring-1s-200px.gif'\n\nfunction App() {\n\n  const [eventData, setEventData] = useState([]);\n  const [loading, setloading] = useState(false)\n\n  useEffect(() =>{\n    const fetchEvents = async  () =>{\n      setloading(true)\n      const resp = await fetch('https://eonet.sci.gsfc.nasa.gov/api/v2.1/events')\n      const { events} = await resp.json()\n\n      setEventData(events);\n      setloading(false)\n    }\n\n    fetchEvents()\n\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n      { !loading ? <Map eventData={eventData} /> : <img className='spinner' alt='spinner' src={Spinner}/>} \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}